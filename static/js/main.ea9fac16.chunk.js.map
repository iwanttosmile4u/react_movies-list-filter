{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","imdbUrl","imgUrl","description","title","className","src","alt","href","MoviesList","visibleMovies","movies","query","lowerCaseQuery","toLowerCase","filter","includes","showChosenMovie","map","imdbId","App","useState","setQuery","htmlFor","type","value","id","placeholder","onChange","event","target","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"ytEAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzCC,EACED,EADFC,QAASC,EACPF,EADOE,OAAQC,EACfH,EADeG,YAAaC,EAC5BJ,EAD4BI,MAGhC,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKJ,EACLK,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,SAI/B,sBAAKC,UAAU,UAAf,UACGF,EACD,uBACA,mBAAGK,KAAMP,EAAT,4BCtBH,IAAMQ,EAA8B,SAAC,GAAuB,IAC3DC,EAVR,SAAyBC,EAAiBC,GACxC,IAAMC,EAAiBD,EAAME,cAE7B,OAAOH,EAAOI,QAAO,SAAAf,GAAK,OACxBA,EAAMI,MAAMU,cAAcE,SAASH,IAChCb,EAAMG,YAAYW,cAAcE,SAASH,MAKxBI,CAD0C,EAApBN,OAAoB,EAAZC,OAGpD,OACE,qBAAKP,UAAU,SAAf,SACGK,EAAcQ,KAAI,SAAAlB,GAAK,OACtB,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMmB,c,OCnBjBC,EAAgB,WAC3B,MAA0BC,mBAAS,IAAnC,mBAAOT,EAAP,KAAcU,EAAd,KAEA,OACE,sBAAKjB,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UAEE,uBAAOkB,QAAQ,eAAelB,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACEmB,KAAK,OACLC,MAAOb,EACPc,GAAG,eACHrB,UAAU,QACVsB,YAAY,mBACZC,SAAU,SAACC,GACTP,EAASO,EAAMC,OAAOL,iBAOhC,cAAC,EAAD,CACEd,OAAQoB,EACRnB,MAAOA,OAGX,qBAAKP,UAAU,UAAf,mCClCN2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ea9fac16.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imdbUrl, imgUrl, description, title,\n  } = movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './MoviesList.scss';\nimport React from 'react';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n  query: string;\n}\n\nfunction showChosenMovie(movies: Movie[], query: string) {\n  const lowerCaseQuery = query.toLowerCase();\n\n  return movies.filter(movie => (\n    movie.title.toLowerCase().includes(lowerCaseQuery)\n    || movie.description.toLowerCase().includes(lowerCaseQuery)\n  ));\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies, query }) => {\n  const visibleMovies = showChosenMovie(movies, query);\n\n  return (\n    <div className=\"movies\">\n      {visibleMovies.map(movie => (\n        <MovieCard key={movie.imdbId} movie={movie} />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState('');\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <div className=\"box\">\n          <div className=\"field\">\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                value={query}\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                onChange={(event) => {\n                  setQuery(event.target.value);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <MoviesList\n          movies={moviesFromServer}\n          query={query}\n        />\n      </div>\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}